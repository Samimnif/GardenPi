#!/usr/bin/python
# -*- coding:utf-8 -*-
import sys
import os
picdir = os.path.join(os.path.dirname(os.path.dirname(os.path.realpath(__file__))), 'pic')
libdir = os.path.join(os.path.dirname(os.path.dirname(os.path.realpath(__file__))), 'lib')
if os.path.exists(libdir):
    sys.path.append(libdir)

import logging
from waveshare_epd import epd2in13_V3
import time
from PIL import Image,ImageDraw,ImageFont
import traceback

def statusShow(temperature, soil, lastWater ):
    
    epd = epd2in13_V3.EPD()
    epd.init()
    epd.Clear(0xFF)

    # Drawing on the image
    font15 = ImageFont.truetype(os.path.join(picdir, 'Font.ttc'), 20)
    font24 = ImageFont.truetype(os.path.join(picdir, 'Font.ttc'), 24)
    
    logging.info("1.Drawing on the image...")
    image = Image.new('1', (epd.height, epd.width), 255)  # 255: clear the frame    
    draw = ImageDraw.Draw(image)
    
    draw.rectangle([(0,0),(135,29)],outline = 0)
#    draw.rectangle([(55,0),(100,50)],fill = 0)
time.strftime('%H:%M:%S'), font = font24#    draw.line([(0,0),(50,50)], fill = 0,width = 1)
#    draw.line([(0,50),(50,0)], fill = 0,width = 1)
#    draw.chord((10, 60, 50, 100), 0, 360, fill = 0)
#    draw.ellipse((55, 60, 95, 100), outline = 0)
#    draw.pieslice((55, 60, 95, 100), 90, 180, outline = 0)
#    draw.pieslice((55, 60, 95, 100), 270, 360, fill = 0)
#    draw.polygon([(110,0),(110,50),(150,25)],outline = 0)
#    draw.polygon([(190,0),(190,50),(150,25)],fill = 0)
    draw.text((1,1),time.strftime('%d %a %H:%M'), font = font24, fill=0)
    draw.text((1, 30), 'Temperature: '+str(temperature), font = font15, fill = 0)
    draw.text((2, 50), 'Soil Status:'+str(soil), font = font15, fill = 0)
    draw.text((2, 70), 'Last Time Watered:\n'+str(lastWater), font = font15, fill = 0)
#    image = image.rotate(180) # rotate
    epd.display(epd.getbuffer(image))
    time.sleep(2)
    
    # read bmp file 
#    logging.info("2.read bmp file...")
#    image = Image.open(os.path.join(picdir, '2in13.bmp'))
#    epd.display(epd.getbuffer(image))
#    time.sleep(2)
    
#    # read bmp file on window
#    logging.info("3.read bmp file on window...")
#     epd.Clear(0xFF)
#    image1 = Image.new('1', (epd.height, epd.width), 255)  # 255: clear the frame
#    bmp = Image.open(os.path.join(picdir, '100x100.bmp'))
#    image1.paste(bmp, (2,2))    
#    epd.display(epd.getbuffer(image1))
#    time.sleep(2)
    
#     # # partial update
#     logging.info("4.show time...")
#     time_image = Image.new('1', (epd.height, epd.width), 255)
#     time_draw = ImageDraw.Draw(time_image)
#     
#     epd.displayPartBaseImage(epd.getbuffer(time_image))
#     num = 0
#     while (True):
#         time_draw.rectangle((120, 80, 220, 105), fill = 255)
#         time_draw.text((120, 80), time.strftime('%H:%M:%S'), font = font24, fill = 0)
#         epd.displayPartial(epd.getbuffer(time_image))
#         num = num + 1
#         if(num == 10):
#             break
    
    #logging.info("Clear...")
    #epd.init()
    #epd.Clear(0xFF)
    
    #logging.info("Goto Sleep...")
    epd.sleep()
        

if __name__ == "__main__":
    statusShow(10, 1, time.strftime('%d @ %H:%M'))
